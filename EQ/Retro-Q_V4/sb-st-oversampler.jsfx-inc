desc:2x oversampler (Sault)

// original code
// Copyright (C) 2015 Theo Niessink
// License: GPL - http://www.gnu.org/licenses/gpl.html

// 2016-04-02
// hacked by Sault

/*

orig stats

	6th order FIR halfband filter
	-1.8 dB at 15 kHz
	-18 dB at 31 kHz
	-52 dB at 40 kHz

now

	18th order FIR halfband filter
	-0.05 dB at 15 kHz
	-60.5 dB at 31 kHz
	-67 dB at 40 kHz

*/




@init


function os_os2()
  instance(y18, y17, y16, y15, y14, y13, y12, y11, y10, y9, y8, y7, y6, y5, y4, y3, y2, y1, y0)
(
  y18 = y16; y17 = y15; y16 = y14; y15 = y13; y14 = y12; y13 = y11; y12 = y10; y11 = y9; y10 = y8; y9 = y7; y8 = y6; y7 = y5;
  y6 = y4; y5 = y3; y4 = y2; y3 = y1; y2 = y0;
);


// coefficients from Matlab
// 0.0028         0        -0.0118         0    0.0334         0   -0.0849
//      0         0.3106    0.5000    0.3106         0   -0.0849         0
// 0.0334         0   -0.0118         0    0.0028

function os_up2(x)
  instance(x9, x8, x7, x6, x5, x4, x3, x2, x1, x0, y18, y17, y16, y15, y14, y13, y12, y11, y10, y9, y8, y7, y6, y5, y4, y3, y2, y1, y0)
(
  x9 = x8; x8 = x7; x7 = x6; x6 = x5; x5 = x4; x4 = x3; x3 = x2; x2 = x1; x1 = x0;
  x0 = x * 2;

  this.os_os2();
  y1 = 0.0028*(x0+x9) - 0.0118*(x1+x8) + 0.0334*(x2+x7) - 0.0849*(x3+x6) + 0.3106*(x4+x5);
  y0 = 0.5*x4;
);


function os_down2()
  instance(y18, y16, y14, y12, y11, y10, y8, y6, y4, y3, y2, y0)
(
  0.0028*(y0+y18) - 0.0118*(y2+y16) + 0.0334*(y4+y14) - 0.0849*(y6+y12) + 0.3106*(y8+y10)+0.5*y9;
);


function os_reset2()
  instance(x9, x8, x7, x6, x5, x4, x3, x2, x1, x0, y18, y17, y16, y15, y14, y13, y12, y11, y10, y9, y8, y7, y6, y5, y4, y3, y2, y1, y0)
(
  x9 = x8 = x7 = x6 = x5 = x4 = x3 = x2 = x1 = x0 =
  y18 = y17 = y16 = y15 = y14 = y13 = y12 = y11 = y10 = y9 = y8 = y7 = y6 = y5 = y4 = y3 = y2 = y1 = y0 = 0;
);
